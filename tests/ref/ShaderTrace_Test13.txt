//> gl_FragCoord: float4 {8.500000, 8.500000, 0.010625, 1.000000}
//> gl_PrimitiveID: int {0}
//> in_Position: float4 {0.062500, 0.062500, 0.010625, 1.000000}
//> (out): float4 {0.915000, 0.427500, 0.021250, 0.842500}
no source

//> k: float {0.593750}
//> i: int {3}
13. float Fn1 (const int i, in float k, out int res)

//> f: float {0.000000}
15. f = 0.0f;

//> res: int {11}
16. res = 11;

//> j: int {3}
//  i: int {3}
17. j = i; j < 10; ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {3}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.899507}
//  k: float {0.593750}
//  j: int {3}
//  f: float {0.000000}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-1.079408}
//  k: float {0.593750}
//  j: int {3}
//  cos(): float {-0.899507}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-1.079408}
20. if (f > 15.7f) {

//> j: int {4}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {4}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.118361}
//  k: float {0.593750}
//  j: int {4}
//  f: float {-1.079408}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-1.221441}
//  k: float {0.593750}
//  j: int {4}
//  cos(): float {-0.118361}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-1.221441}
20. if (f > 15.7f) {

//> j: int {5}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {5}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {0.771605}
//  k: float {0.593750}
//  j: int {5}
//  f: float {-1.221441}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-0.295515}
//  k: float {0.593750}
//  j: int {5}
//  cos(): float {0.771605}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-0.295515}
20. if (f > 15.7f) {

//> j: int {6}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {6}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {0.952161}
//  k: float {0.593750}
//  j: int {6}
//  f: float {-0.295515}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {0.847079}
//  k: float {0.593750}
//  j: int {6}
//  cos(): float {0.952161}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {0.847079}
20. if (f > 15.7f) {

//> j: int {7}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {7}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {0.257305}
//  k: float {0.593750}
//  j: int {7}
//  f: float {0.847079}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {1.155844}
//  k: float {0.593750}
//  j: int {7}
//  cos(): float {0.257305}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {1.155844}
20. if (f > 15.7f) {

//> j: int {8}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {8}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.674116}
//  k: float {0.593750}
//  j: int {8}
//  f: float {1.155844}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {0.346905}
//  k: float {0.593750}
//  j: int {8}
//  cos(): float {-0.674116}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {0.346905}
20. if (f > 15.7f) {

//> j: int {9}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {9}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.985758}
//  k: float {0.593750}
//  j: int {9}
//  f: float {0.346905}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-0.836005}
//  k: float {0.593750}
//  j: int {9}
//  cos(): float {-0.985758}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-0.836005}
20. if (f > 15.7f) {

//> j: int {10}
17. ++j) {

//> (out): bool {false}
//  i: int {3}
//  j: int {10}
17. for (int j = i; j < 10; ++j) {

//> fract(): float {0.757745}
//  k: float {0.593750}
//  f: float {-0.836005}
25. return fract(f + k);

//> c0: float {0.757745}
//  in_Position: float4 {0.062500, 0.062500, 0.010625, 1.000000}
33. c0 = Fn1( 3, in_Texcoord.x + in_Position.y, c1.x );

//> out_Color: float2 {0.000000, 11.757745}
//  c0: float {0.757745}
34. out_Color[1] = c0 + float(c1.x);

//> (out): void
35. return;

//---------------------------

//> gl_FragCoord: float4 {8.500000, 8.500000, 0.028403, 1.000000}
//> gl_PrimitiveID: int {2}
//> in_Position: float4 {0.062500, 0.062500, 0.028403, 1.000000}
//> (out): float4 {0.772778, 0.640833, 0.056806, 0.913611}
no source

//> k: float {0.593750}
//> i: int {3}
13. float Fn1 (const int i, in float k, out int res)

//> f: float {0.000000}
15. f = 0.0f;

//> res: int {11}
16. res = 11;

//> j: int {3}
//  i: int {3}
17. j = i; j < 10; ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {3}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.899507}
//  k: float {0.593750}
//  j: int {3}
//  f: float {0.000000}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-1.079408}
//  k: float {0.593750}
//  j: int {3}
//  cos(): float {-0.899507}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-1.079408}
20. if (f > 15.7f) {

//> j: int {4}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {4}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.118361}
//  k: float {0.593750}
//  j: int {4}
//  f: float {-1.079408}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-1.221441}
//  k: float {0.593750}
//  j: int {4}
//  cos(): float {-0.118361}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-1.221441}
20. if (f > 15.7f) {

//> j: int {5}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {5}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {0.771605}
//  k: float {0.593750}
//  j: int {5}
//  f: float {-1.221441}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-0.295515}
//  k: float {0.593750}
//  j: int {5}
//  cos(): float {0.771605}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-0.295515}
20. if (f > 15.7f) {

//> j: int {6}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {6}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {0.952161}
//  k: float {0.593750}
//  j: int {6}
//  f: float {-0.295515}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {0.847079}
//  k: float {0.593750}
//  j: int {6}
//  cos(): float {0.952161}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {0.847079}
20. if (f > 15.7f) {

//> j: int {7}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {7}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {0.257305}
//  k: float {0.593750}
//  j: int {7}
//  f: float {0.847079}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {1.155844}
//  k: float {0.593750}
//  j: int {7}
//  cos(): float {0.257305}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {1.155844}
20. if (f > 15.7f) {

//> j: int {8}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {8}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.674116}
//  k: float {0.593750}
//  j: int {8}
//  f: float {1.155844}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {0.346905}
//  k: float {0.593750}
//  j: int {8}
//  cos(): float {-0.674116}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {0.346905}
20. if (f > 15.7f) {

//> j: int {9}
17. ++j) {

//> (out): bool {true}
//  i: int {3}
//  j: int {9}
17. for (int j = i; j < 10; ++j) {

//> cos(): float {-0.985758}
//  k: float {0.593750}
//  j: int {9}
//  f: float {0.346905}
18. 		f += 1.2f *
19. 				cos(float(j) + k);

//> f: float {-0.836005}
//  k: float {0.593750}
//  j: int {9}
//  cos(): float {-0.985758}
18. f += 1.2f *
19. 				cos(float(j) + k);

//> (out): bool {false}
//  f: float {-0.836005}
20. if (f > 15.7f) {

//> j: int {10}
17. ++j) {

//> (out): bool {false}
//  i: int {3}
//  j: int {10}
17. for (int j = i; j < 10; ++j) {

//> fract(): float {0.757745}
//  k: float {0.593750}
//  f: float {-0.836005}
25. return fract(f + k);

//> c0: float {0.757745}
//  in_Position: float4 {0.062500, 0.062500, 0.028403, 1.000000}
33. c0 = Fn1( 3, in_Texcoord.x + in_Position.y, c1.x );

//> out_Color: float2 {0.000000, 11.757745}
//  c0: float {0.757745}
34. out_Color[1] = c0 + float(c1.x);

//> (out): void
35. return;

//---------------------------

//> gl_VertexIndex: int {0}
//> gl_InstanceIndex: int {0}
no source

//> out_Position: float4 {-1.000000, -1.000000, 0.000000, 1.000000}
//  gl_VertexIndex: int {0}
21. out_Position = vec4( g_Positions[gl_VertexIndex], float(gl_VertexIndex) * 0.01f, 1.0f );

//> (out): float4 {-1.000000, -1.000000, 0.000000, 1.000000}
//  out_Position: float4 {-1.000000, -1.000000, 0.000000, 1.000000}
22. gl_Position = out_Position;

//> (out): float2 {0.000000, 0.000000}
//  gl_VertexIndex: int {0}
23. out_Texcoord = g_Positions[gl_VertexIndex].xy * 0.5f + 0.5f;

//> (out): float4 {1.000000, 0.300000, 0.000000, 0.800000}
//  gl_VertexIndex: int {0}
24. out_Color = mix(vec4(1.0, 0.3, 0.0, 0.8), vec4(0.6, 0.9, 0.1, 1.0), float(gl_VertexIndex) / float(g_Positions.length()));

//---------------------------

//> gl_VertexIndex: int {2}
//> gl_InstanceIndex: int {0}
no source

//> out_Position: float4 {2.000000, -1.000000, 0.020000, 1.000000}
//  gl_VertexIndex: int {2}
21. out_Position = vec4( g_Positions[gl_VertexIndex], float(gl_VertexIndex) * 0.01f, 1.0f );

//> (out): float4 {2.000000, -1.000000, 0.020000, 1.000000}
//  out_Position: float4 {2.000000, -1.000000, 0.020000, 1.000000}
22. gl_Position = out_Position;

//> (out): float2 {1.500000, 0.000000}
//  gl_VertexIndex: int {2}
23. out_Texcoord = g_Positions[gl_VertexIndex].xy * 0.5f + 0.5f;

//> (out): float4 {0.840000, 0.540000, 0.040000, 0.880000}
//  gl_VertexIndex: int {2}
24. out_Color = mix(vec4(1.0, 0.3, 0.0, 0.8), vec4(0.6, 0.9, 0.1, 1.0), float(gl_VertexIndex) / float(g_Positions.length()));

//---------------------------

//> gl_VertexIndex: int {4}
//> gl_InstanceIndex: int {0}
no source

//> out_Position: float4 {-2.000000, 0.000000, 0.040000, 1.000000}
//  gl_VertexIndex: int {4}
21. out_Position = vec4( g_Positions[gl_VertexIndex], float(gl_VertexIndex) * 0.01f, 1.0f );

//> (out): float4 {-2.000000, 0.000000, 0.040000, 1.000000}
//  out_Position: float4 {-2.000000, 0.000000, 0.040000, 1.000000}
22. gl_Position = out_Position;

//> (out): float2 {-0.500000, 0.500000}
//  gl_VertexIndex: int {4}
23. out_Texcoord = g_Positions[gl_VertexIndex].xy * 0.5f + 0.5f;

//> (out): float4 {0.680000, 0.780000, 0.080000, 0.960000}
//  gl_VertexIndex: int {4}
24. out_Color = mix(vec4(1.0, 0.3, 0.0, 0.8), vec4(0.6, 0.9, 0.1, 1.0), float(gl_VertexIndex) / float(g_Positions.length()));

//---------------------------

